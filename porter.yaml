# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/authoring-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: porter-iot-sql
version: 0.2.0
description: "A Porter bundle that installs IoT Edge modules on an IoT Edge device set using a query against the digital twins."
invocationImage: squillace/porter-iot-sql:0.2.0
tag: squillace/porter-iot-sql:0.2.0

# Uncomment to support thick, or offline bundle exporting.
#imageMap:
#  websvc:
#      description: "A simple web service"
#      imageType: "docker"
#      image: "jeremyrickard/devops-days-msp@sha256:85b1a9b4b60a4cf73a23517dad677e64edf467107fa7d58fce9c50e6a3e4c914"
#      digest: "sha256:85b1a9b4b60a4cf73a23517dad677e64edf467107fa7d58fce9c50e6a3e4c914"

# Uncomment out the line below to use a template Dockerfile for your invocation image
dockerfile: Dockerfile.tmpl

mixins:
  - exec

customActions:
  com.azure.iot.deployment.status:
    description: "Getting the status of the Azure IoT deployments."
    stateless: false
    modifies: false


install:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

  - exec: 
      description: "Azure IoT Edge deployment"
      command: "az"
      arguments: 
        - "iot"
        - "edge"
        - "deployment"
        - "create"
        - "--deployment-id"
        - "{{ bundle.parameters.DEPLOYMENT_ID }}" 
        - "--hub-name"
        - "{{ bundle.parameters.HUB_NAME }}"
        - "--content"
        - "iot-deployments/deployment.json"
        - "--target-condition"
        - "tags.name = '{{ bundle.parameters.CONDITION }}'"

upgrade:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

uninstall:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

  - exec: 
      description: "Azure IoT Edge deployment: Deploying to removing the modules."
      command: "az"
      arguments: 
        - "iot"
        - "edge"
        - "deployment"
        - "create"
        - "--deployment-id"
        - "removing-{{ bundle.parameters.DEPLOYMENT_ID }}" 
        - "--hub-name"
        - "{{ bundle.parameters.HUB_NAME }}"
        - "--content"
        - "iot-deployments/undeployment.json"
        - "--target-condition"
        - "tags.name = '{{ bundle.parameters.CONDITION }}'"

  - exec:
      description: ""
      command: "echo"
      arguments:
        - "Please check and remove any deployments that involved these modules with the status command."


com.azure.iot.deployment.status:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

  - exec: 
      description: "Azure IoT Edge deployment: Querying the deployments."
      command: "az"
      arguments: 
        - "iot"
        - "edge"
        - "deployment"
        - "list"
        - "--resource-group"
        - "{{ bundle.parameters.AZURE_RESOURCE_GROUP }}"
        - "--hub-name"
        - "{{ bundle.parameters.HUB_NAME }}"
        - "--query"
        - "[].{ID:id,Priority:priority,Applied:systemMetrics.results.appliedCount,Targeted:systemMetrics.results.targetedCount,Failed:systemMetrics.results.reportedFailedCount,Succeeded:systemMetrics.results.reportedSuccessfulCount,Target:targetCondition,Created:createdTimeUtc,Updated:lastUpdatedTimeUtc}"
        - "--output"
        - "table"



# See https://porter.sh/authoring-bundles/#dependencies
#dependencies:
#  mysql:
#    tag: deislabs/porter-mysql:latest
#    parameters:
#      database-name: wordpress

# See https://porter.sh/wiring/#credentials
credentials:
  - name: AZURE_CLIENT_ID
    env: AZURE_CLIENT_ID
  - name: TENANT_DNS
    env: TENANT_DNS
  - name: AZURE_SP_PASSWORD
    env: AZURE_SP_PASSWORD

parameters:
  - name: AZURE_RESOURCE_GROUP
    type: string
    default: IoTEdgeResources
    destination:
      env: AZURE_RESOURCE_GROUP
  - name: CONDITION
    type: string
    default: target
    destination:
      env: CONDITION
  - name: DEPLOYMENT_ID
    type: string
    default: sql
    destination:
      env: DEPLOYMENT_ID
  - name: HUB_NAME
    type: string
    default: cnab-hub
    destination:
      env: HUB_NAME


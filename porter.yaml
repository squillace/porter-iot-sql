# This is the configuration for Porter
# You must define steps for each action, but the rest is optional
# See https://porter.sh/authoring-bundles for documentation on how to configure your bundle
# Uncomment out the sections below to take full advantage of what Porter can do!

name: porter-iot-sql
version: 0.1.0
description: "A porter configuration"
invocationImage: squillace.azurecr.io/squillace/porter-iot-sql:0.1.0
tag: squillace.azurecr.io/squillace/porter-iot-sql:0.1.0

# Uncomment out the line below to use a template Dockerfile for your invocation image
dockerfile: Dockerfile.tmpl

mixins:
  - exec

customActions:
  status:
    description: "Getting the status of the Azure IoT deployments."
    stateless: false
    modifies: false

install:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"


#az iot edge deployment create --deployment-id "$DEPLOYMENT_ID" --hub-name "$HUB_NAME" --content /cnab/app/deploy/sql-deployment.json --target-condition "tags.name = '$CONDITION'"
  - exec: 
      description: "Azure IoT Edge deployment"
      command: "az"
      arguments: 
        - "iot"
        - "edge"
        - "deployment"
        - "create"
        - "--deployment-id"
        - "{{ bundle.parameters.DEPLOYMENT_ID }}" 
        - "--hub-name"
        - "{{ bundle.parameters.HUB_NAME }}"
        - "--content"
        - "deployment.json"
        - "--target-condition"
        - "tags.name = '{{ bundle.parameters.CONDITION }}'"

upgrade:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

uninstall:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

  - exec: 
      description: "Azure IoT Edge deployment: Removing the modules."
      command: "az"
      arguments: 
        - "iot"
        - "edge"
        - "deployment"
        - "create"
        - "--deployment-id"
        - "removing-{{ bundle.parameters.DEPLOYMENT_ID }}" 
        - "--hub-name"
        - "{{ bundle.parameters.HUB_NAME }}"
        - "--content"
        - "undeployment.json"
        - "--target-condition"
        - "tags.name = '{{ bundle.parameters.CONDITION }}'"

  - exec:
      description: ""
      command: "echo"
      arguments:
        - "Please check and remove any deployments that involved these modules."


status:
  - exec: 
      description: "Azure CLI login"
      command: "az"
      arguments: 
        - "login" 
        - "--service-principal"
        - "--username" 
        - "{{ bundle.credentials.AZURE_CLIENT_ID}}"
        - "--password" 
        - "{{ bundle.credentials.AZURE_SP_PASSWORD}}"
        - "--tenant" 
        - "{{ bundle.credentials.TENANT_DNS}}"

  - exec: 
      description: "Azure IoT Edge deployment: Querying the deployments."
      command: "az"
      arguments: 
        - "iot"
        - "edge"
        - "deployment"
        - "list"
        - "--resource-group"
        - "{{ bundle.parameters.AZURE_RESOURCE_GROUP }}"
        - "--hub-name"
        - "{{ bundle.parameters.HUB_NAME }}"
        - "--query"
        - "[].{ID:id,Priority:priority,Applied:systemMetrics.results.appliedCount,Targeted:systemMetrics.results.targetedCount,Failed:systemMetrics.results.reportedFailedCount,Succeeded:systemMetrics.results.reportedSuccessfulCount,Target:targetCondition,Created:createdTimeUtc,Updated:lastUpdatedTimeUtc}"
        - "--output"
        - "table"





# See https://porter.sh/authoring-bundles/#dependencies
#dependencies:
#  mysql:
#    tag: deislabs/porter-mysql:latest
#    parameters:
#      database-name: wordpress

# See https://porter.sh/wiring/#credentials
credentials:
  - name: SUBSCRIPTION_ID
    env: AZURE_SUBSCRIPTION_ID
  - name: AZURE_CLIENT_ID
    env: AZURE_CLIENT_ID
  - name: TENANT_DNS
    env: TENANT_DNS
  - name: AZURE_SP_PASSWORD
    env: AZURE_SP_PASSWORD

parameters:
  - name: AZURE_RESOURCE_GROUP
    type: string
    default: IoTEdgeResources
    destination:
      env: AZURE_RESOURCE_GROUP
  - name: CONDITION
    type: string
    default: target
    destination:
      env: CONDITION
  - name: DEPLOYMENT_ID
    type: string
    default: sql
    destination:
      env: DEPLOYMENT_ID
  - name: HUB_NAME
    type: string
    default: cnab-hub
    destination:
      env: HUB_NAME
